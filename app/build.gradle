buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}
buildscript {
    repositories {


        repositories {
            maven { url 'https://maven.fabric.io/public' }
        }
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

apply plugin: 'com.google.gms.google-services'

android {

//    configurations.all {
//        resolutionStrategy {
//            force 'com.google.guava:listenablefuture:1.0'
//            force 'com.google.guava:guava:26.0-android'
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    signingConfigs {
        release_config {
            keyAlias 'release'
            keyPassword '12345678'
            storeFile file('/home/vinnu/Documents/dev_key/release.jks')
            storePassword '12345678'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.buyucoinApp.buyucoin"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    flavorDimensions "default"
    productFlavors {
        stagging {
            buildConfigField("String", "BASE_URL", "\"http://test.buyucoin.com/andrios/\"")
        }
        production {
            buildConfigField("String", "BASE_URL", "\"https://www.buyucoin.com/andrios/\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_config
        }
    }
    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
    buildToolsVersion '28.0.3'
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotation.pro'
    }


}


dependencies {
    def work_version = "1.0.1"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-database:18.0.0'
    implementation 'com.google.firebase:firebase-config:18.0.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display:18.0.2'
    implementation 'com.google.firebase:firebase-messaging:19.0.1'

    implementation 'com.jjoe64:graphview:4.2.2'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "android.arch.work:work-runtime:$work_version"
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'com.journeyapps:zxing-android-embedded:3.2.0@aar'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'

    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'


    /* Picasso lib for image loading  */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /* Android Architecture Component - ConstraintLayout  */
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    /* Android Architecture Component - LiveData & ViewModel  */
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    /* Android Architecture Component - Room Persistance Lib  */
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'

    /* Dagger2 - We are going to use dagger.android which includes
     * support for Activity and fragment injection so we need to include
     * the following dependencies */
    implementation 'com.google.dagger:dagger-android:2.22'
    implementation 'com.google.dagger:dagger-android-support:2.22'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.17'

    /* Dagger2 - default dependency */
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

}
apply plugin: 'com.google.gms.google-services'